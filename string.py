

#string на несколько строк
c = '''fwds
dd'''

'''
print(c)

b = "fg"
print((b + 'kr') * 3)
#res = fgkrfgkrfgkr

print(len(b)) #длинна строки

print("123" + "42")

number_str = input()
first_part = number_str[:3] #3 символа слева
second_part = number_str[3:] #3 символа справа
'''

##################
'''
Напишите программу, которая вычисляет процентное содержание символов G (гуанин) и C (цитозин) в 
введенной строке (программа не должна зависеть от регистра вводимых символов).
Например, в строке "acggtgttat" процентное содержание символов G и C равно 4/10⋅100=40.0, 
где 4 -- это количество символов G и C,  а 10 -- это длина строки.

str = input()
cnt = str.lower().count('g') + str.lower().count('c')
print(cnt / len(str)*100)
'''

##################
'''
s = "abcdefghijk"
print(s[3:6])
print(s[:6])
print(s[3:])
print(s[::-1])
print(s[-3:])
print(s[:-6])
print(s[-1:-10:-2])
'''
##################
'''
Узнав, что ДНК не является случайной строкой, только что поступившие в Институт биоинформатики студенты 
группы информатиков предложили использовать алгоритм сжатия, который сжимает повторяющиеся символы в строке.

Кодирование осуществляется следующим образом:
s = 'aaaabbсaa' преобразуется в 'a4b2с1a2', то есть группы одинаковых символов исходной строки заменяются на 
этот символ и количество его повторений в этой позиции строки.

Напишите программу, которая считывает строку, кодирует её предложенным алгоритмом и выводит закодированную 
последовательность на стандартный вывод. Кодирование должно учитывать регистр символов.

s = input()
s += '  '
res = ''
currL = ''
nextL = ''
cnt = 1
for i in range(len(s)-1):
    currL = s[i]
    nextL = s[i + 1]
    if currL == nextL:
        cnt += 1
    else:
        res += s[i] + str(cnt)  #int to string
        cnt = 1
print(res)
'''
students = ['Ivan', 'Masha', 'Sasha']
students += ['Olga']
students += 'Olga'
print(students)
